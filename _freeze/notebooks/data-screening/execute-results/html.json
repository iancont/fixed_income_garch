{
  "hash": "3339f2d5a46a9d3b755861f58e6cda58",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Data Screening\ndescription: Visualización y análisis estadístico del feature dataset\nauthors: Ian Contreras\n---\n\n\n## Importaciones\n\n### Librerías\n\n::: {#importing-libraries .cell execution_count=1}\n``` {}\n#| label: importing-libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import PercentFormatter\nimport pandas as pd\nimport statsmodels.api as sm\nimport scipy.stats as stats\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom statsmodels.tsa.stattools import adfuller\nfrom pmdarima.arima import auto_arima\nfrom arch import arch_model\n```\n:::\n\n\n:::{#78a64f1d .cell .markdown}\n### Data\n:::\n\n::: {#importing-data .cell execution_count=2}\n``` {}\n#| label: importing-data\ndf = pd.read_csv(r'..\\data\\csv\\irp.csv', parse_dates=['date'], index_col='date')\nreturns = df['price_return']\nsplit_date = '2020-12-31'\nR_test = df[df.index >= split_date]['price_return'].rolling(\n    window=5).std().dropna()\n```\n:::\n\n\n:::{#b6a15c66 .cell .markdown}\n## Análisis Exploratorio. \n\n### Serie Histórica\n:::\n\n::: {#cell-fig-price-return-series .cell execution_count=3}\n``` {}\n#| label: fig-price-return-series\n#| fig-cap: Serie de retornos diarios IRP-GOBIX.\nfig, ax = plt.subplots(figsize=(12, 10))\nax.plot(df.index, df['price_return'])\nax.set_ylabel('Retorno Precio (BPS)')\nax.set_xlim([df.index.min(), df.index.max()])\nax.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n```\nNo artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![Serie de retornos diarios IRP-GOBIX.](data-screening_files/figure-html/fig-price-return-series-output-2.png){#fig-price-return-series width=976 height=781}\n:::\n:::\n\n\n:::{#51889caf .cell .markdown}\n### Análisis descriptivo de la muestra\n:::\n\n::: {#cell-return-descriptive-table .cell execution_count=4}\n``` {}\n#| label: return-descriptive-table\n#| fig-cap: Tabla de las estadísticas descriptiva de la serie de retornos\ndesc_stats = returns.describe()\n\nskewness = returns.skew()\nkurtosis = returns.kurtosis()\njb_test = sm.stats.jarque_bera(returns)\n\ndescriptive_table = pd.DataFrame({\n    'Observations': [int(desc_stats['count'])],\n    'Mean': [desc_stats['mean']],\n    'Median': [desc_stats['50%']],\n    'Std. Dev': [desc_stats['std']],\n    'Skewness': [skewness],\n    'Kurtosis': [kurtosis],\n    'Jarque-Bera': [jb_test[0]],\n    'Prob.': [jb_test[1]]\n})\ndescriptive_table\n```\n\n::: {#return-descriptive-table .cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Observations</th>\n      <th>Mean</th>\n      <th>Median</th>\n      <th>Std. Dev</th>\n      <th>Skewness</th>\n      <th>Kurtosis</th>\n      <th>Jarque-Bera</th>\n      <th>Prob.</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1941</td>\n      <td>1.353251</td>\n      <td>-0.318044</td>\n      <td>23.502911</td>\n      <td>0.70527</td>\n      <td>7.587995</td>\n      <td>4789.532331</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n\nTabla de las estadísticas descriptiva de la serie de retornos\n:::\n:::\n\n\n:::{#6087d98d .cell .markdown}\n### Ajuste de distribuciones\n:::\n\n::: {#cell-fig-distribution-fitting .cell execution_count=5}\n``` {}\n#| label: fig-distribution-fitting\n#| fig-cap: Ajuste de distribuciones a los retornos de precio.\ndistributions = [stats.norm, stats.t]\n\nplt.figure(figsize=(10, 6))\nplt.hist(returns, bins=50, density=True, alpha=0.6, label='Resultados Empíricos')\n\nfor dist in distributions:\n    params = dist.fit(returns)\n    x = np.linspace(returns.min(), returns.max(), 100)\n    plt.plot(x, dist.pdf(x, *params), label=f'{dist.name} fit')\n\nplt.xlabel('Retorno Precio (BPS)')\nplt.ylabel('Verosimilitud')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Ajuste de distribuciones a los retornos de precio.](data-screening_files/figure-html/fig-distribution-fitting-output-1.png){#fig-distribution-fitting width=829 height=503}\n:::\n:::\n\n\n:::{#00895aca .cell .markdown}\n### Q-Q plot con respecto a distribución t\n:::\n\n::: {#cell-fig-tqq-plot .cell execution_count=6}\n``` {}\n#| label: fig-tqq-plot\n#| fig-cap: Q-Q Plot de retornos de precio contra la distribución t.\nt_params = stats.t.fit(returns)\n\nfig, ax = plt.subplots(figsize=(12, 10))\nstats.probplot(returns, dist=\"t\", sparams=t_params, plot=plt)\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Q-Q Plot de retornos de precio contra la distribución t.](data-screening_files/figure-html/fig-tqq-plot-output-1.png){#fig-tqq-plot width=976 height=819}\n:::\n:::\n\n\n:::{#e40ef716 .cell .markdown}\n### Kolmorov Smirnov test para distribución t\n:::\n\n::: {#kolmorov-smirnov .cell execution_count=7}\n``` {}\n#| label: kolmorov-smirnov\nks_stat, p_value = stats.kstest(returns, 't', args=t_params)\nprint(f\"Kolmogorov-Smirnov statistic: {ks_stat}\")\nprint(f\"P-value: {p_value}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKolmogorov-Smirnov statistic: 0.028557323574938343\nP-value: 0.0827419967953622\n```\n:::\n:::\n\n\n:::{#3bd26ae4 .cell .markdown}\n### Test de estacionariedad/ robustez\n:::\n\n::: {#adf .cell execution_count=8}\n``` {}\n#| label: adf\nresult = adfuller(returns)\nprint('ADF Statistic:', result[0])\nprint('p-value:', result[1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nADF Statistic: -13.174114850736395\np-value: 1.2332976276203498e-24\n```\n:::\n:::\n\n\n:::{#fdc9e586 .cell .markdown}\n### Test de autocorrelación\n:::\n\n::: {#cell-fig-acf-pacf .cell execution_count=9}\n``` {}\n#| label: fig-acf-pacf\n#| fig-cap: Función de autocorrelación (ACF) y función de autocorrelación parcial (PACF) de los retornos.\nfig, axes = plt.subplots(2, 1, figsize=(10, 8))\nplot_acf(returns, lags=24, ax=axes[0])\naxes[0].set_title('Función de Autocorrelación (ACF)')\n\nplot_pacf(returns, lags=12, ax=axes[1])\naxes[1].set_title('Función de Autocorrelación Parcial (PACF)')\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Función de autocorrelación (ACF) y función de autocorrelación parcial (PACF) de los retornos.](data-screening_files/figure-html/fig-acf-pacf-output-1.png){#fig-acf-pacf width=950 height=757}\n:::\n:::\n\n\n:::{#c409b1eb .cell .markdown}\n## Resultados \n### Estimación del modelo ARIMA \n:::\n\n::: {#cell-arima-model .cell execution_count=10}\n``` {}\n#| label: arima-model\n#| fig-cap: Modelo ARIMA de maxima verosimilitud para la serie de retornos.\nmodel_auto = auto_arima(returns)\nmodel_auto.summary()\n```\n\n::: {#arima-model .cell-output .cell-output-display execution_count=10}\n```{=html}\n<table class=\"simpletable\">\n<caption>SARIMAX Results</caption>\n<tr>\n  <th>Dep. Variable:</th>           <td>y</td>        <th>  No. Observations:  </th>   <td>1941</td>   \n</tr>\n<tr>\n  <th>Model:</th>           <td>SARIMAX(3, 0, 4)</td> <th>  Log Likelihood     </th> <td>-8853.517</td>\n</tr>\n<tr>\n  <th>Date:</th>            <td>Sat, 19 Oct 2024</td> <th>  AIC                </th> <td>17725.034</td>\n</tr>\n<tr>\n  <th>Time:</th>                <td>12:46:13</td>     <th>  BIC                </th> <td>17775.173</td>\n</tr>\n<tr>\n  <th>Sample:</th>                  <td>0</td>        <th>  HQIC               </th> <td>17743.472</td>\n</tr>\n<tr>\n  <th></th>                      <td> - 1941</td>     <th>                     </th>     <td> </td>    \n</tr>\n<tr>\n  <th>Covariance Type:</th>        <td>opg</td>       <th>                     </th>     <td> </td>    \n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n      <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>intercept</th> <td>    0.3602</td> <td>    0.273</td> <td>    1.317</td> <td> 0.188</td> <td>   -0.176</td> <td>    0.896</td>\n</tr>\n<tr>\n  <th>ar.L1</th>     <td>    0.1366</td> <td>    0.065</td> <td>    2.106</td> <td> 0.035</td> <td>    0.009</td> <td>    0.264</td>\n</tr>\n<tr>\n  <th>ar.L2</th>     <td>   -0.1931</td> <td>    0.066</td> <td>   -2.934</td> <td> 0.003</td> <td>   -0.322</td> <td>   -0.064</td>\n</tr>\n<tr>\n  <th>ar.L3</th>     <td>    0.7691</td> <td>    0.061</td> <td>   12.644</td> <td> 0.000</td> <td>    0.650</td> <td>    0.888</td>\n</tr>\n<tr>\n  <th>ma.L1</th>     <td>   -0.1139</td> <td>    0.065</td> <td>   -1.752</td> <td> 0.080</td> <td>   -0.241</td> <td>    0.014</td>\n</tr>\n<tr>\n  <th>ma.L2</th>     <td>    0.2163</td> <td>    0.067</td> <td>    3.220</td> <td> 0.001</td> <td>    0.085</td> <td>    0.348</td>\n</tr>\n<tr>\n  <th>ma.L3</th>     <td>   -0.7032</td> <td>    0.062</td> <td>  -11.315</td> <td> 0.000</td> <td>   -0.825</td> <td>   -0.581</td>\n</tr>\n<tr>\n  <th>ma.L4</th>     <td>    0.0750</td> <td>    0.020</td> <td>    3.715</td> <td> 0.000</td> <td>    0.035</td> <td>    0.115</td>\n</tr>\n<tr>\n  <th>sigma2</th>    <td>  536.2183</td> <td>    8.358</td> <td>   64.154</td> <td> 0.000</td> <td>  519.836</td> <td>  552.600</td>\n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n  <th>Ljung-Box (L1) (Q):</th>     <td>0.00</td> <th>  Jarque-Bera (JB):  </th> <td>4395.18</td>\n</tr>\n<tr>\n  <th>Prob(Q):</th>                <td>1.00</td> <th>  Prob(JB):          </th>  <td>0.00</td>  \n</tr>\n<tr>\n  <th>Heteroskedasticity (H):</th> <td>1.11</td> <th>  Skew:              </th>  <td>0.59</td>  \n</tr>\n<tr>\n  <th>Prob(H) (two-sided):</th>    <td>0.17</td> <th>  Kurtosis:          </th>  <td>10.28</td> \n</tr>\n</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n```\n\nModelo ARIMA de maxima verosimilitud para la serie de retornos.\n:::\n:::\n\n\n:::{#bc8a499b .cell .markdown}\n### Estimación del AR-GARCH\n:::\n\n::: {#garch-model-fitting .cell execution_count=11}\n``` {}\n#| label: garch-model-fitting\n#| fig-cap: Ajuste del modelo Zero-Garch ala serie de retornos\nar = arch_model(returns, mean='Zero', vol='GARCH', dist='t')\nres = ar.fit(last_obs=split_date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIteration:      1,   Func. Count:      6,   Neg. LLF: 13422.240578344366\nIteration:      2,   Func. Count:     13,   Neg. LLF: 9134.230609110135\nIteration:      3,   Func. Count:     19,   Neg. LLF: 8666.557319151609\nIteration:      4,   Func. Count:     25,   Neg. LLF: 8791.275490419279\nIteration:      5,   Func. Count:     31,   Neg. LLF: 8082.081172585756\nIteration:      6,   Func. Count:     37,   Neg. LLF: 8739.332058159429\nIteration:      7,   Func. Count:     43,   Neg. LLF: 8658.860183258712\nIteration:      8,   Func. Count:     49,   Neg. LLF: 7638.6451038734085\nIteration:      9,   Func. Count:     55,   Neg. LLF: 7626.627815474433\nIteration:     10,   Func. Count:     60,   Neg. LLF: 7624.619361750198\nIteration:     11,   Func. Count:     65,   Neg. LLF: 7623.76815711753\nIteration:     12,   Func. Count:     70,   Neg. LLF: 7623.223103893486\nIteration:     13,   Func. Count:     75,   Neg. LLF: 7623.048366501091\nIteration:     14,   Func. Count:     80,   Neg. LLF: 7622.998678403758\nIteration:     15,   Func. Count:     85,   Neg. LLF: 7622.986214899395\nIteration:     16,   Func. Count:     90,   Neg. LLF: 7622.975788918075\nIteration:     17,   Func. Count:     95,   Neg. LLF: 7622.9611635250085\nIteration:     18,   Func. Count:    100,   Neg. LLF: 7622.937610163095\nIteration:     19,   Func. Count:    105,   Neg. LLF: 7622.908361612077\nIteration:     20,   Func. Count:    110,   Neg. LLF: 7622.881904359898\nIteration:     21,   Func. Count:    115,   Neg. LLF: 7622.870928301752\nIteration:     22,   Func. Count:    120,   Neg. LLF: 7622.868967833485\nIteration:     23,   Func. Count:    125,   Neg. LLF: 7622.868843481545\nIteration:     24,   Func. Count:    130,   Neg. LLF: 7622.868828856013\nIteration:     25,   Func. Count:    135,   Neg. LLF: 7622.868827051428\nIteration:     26,   Func. Count:    139,   Neg. LLF: 7622.868827051394\nOptimization terminated successfully    (Exit mode 0)\n            Current function value: 7622.868827051428\n            Iterations: 26\n            Function evaluations: 139\n            Gradient evaluations: 26\n```\n:::\n:::\n\n\n:::{#f91e0974 .cell .markdown}\n### Resultados del AR-GARCH\n:::\n\n::: {#cell-garch-model .cell execution_count=12}\n``` {}\n#| label: garch-model\n#| fig-cap: Modelo Zero-Garch de la serie de retornos\nres.summary()\n```\n\n::: {#garch-model .cell-output .cell-output-display execution_count=12}\n```{=html}\n<table class=\"simpletable\">\n<caption>Zero Mean - GARCH Model Results</caption>\n<tr>\n  <th>Dep. Variable:</th>       <td>price_return</td>       <th>  R-squared:         </th>  <td>   0.000</td> \n</tr>\n<tr>\n  <th>Mean Model:</th>            <td>Zero Mean</td>        <th>  Adj. R-squared:    </th>  <td>   0.001</td> \n</tr>\n<tr>\n  <th>Vol Model:</th>               <td>GARCH</td>          <th>  Log-Likelihood:    </th> <td>  -7622.87</td>\n</tr>\n<tr>\n  <th>Distribution:</th>  <td>Standardized Student's t</td> <th>  AIC:               </th> <td>   15253.7</td>\n</tr>\n<tr>\n  <th>Method:</th>           <td>Maximum Likelihood</td>    <th>  BIC:               </th> <td>   15275.6</td>\n</tr>\n<tr>\n  <th></th>                           <td></td>             <th>  No. Observations:  </th>    <td>1753</td>   \n</tr>\n<tr>\n  <th>Date:</th>              <td>Sat, Oct 19 2024</td>     <th>  Df Residuals:      </th>    <td>1753</td>   \n</tr>\n<tr>\n  <th>Time:</th>                  <td>12:46:13</td>         <th>  Df Model:          </th>      <td>0</td>    \n</tr>\n</table>\n<table class=\"simpletable\">\n<caption>Volatility Model</caption>\n<tr>\n      <td></td>        <th>coef</th>     <th>std err</th>      <th>t</th>       <th>P>|t|</th>    <th>95.0% Conf. Int.</th>  \n</tr>\n<tr>\n  <th>omega</th>    <td>   58.8679</td> <td>   25.182</td> <td>    2.338</td> <td>1.940e-02</td> <td>[  9.512,1.082e+02]</td>\n</tr>\n<tr>\n  <th>alpha[1]</th> <td>    0.1892</td> <td>6.657e-02</td> <td>    2.842</td> <td>4.482e-03</td> <td>[5.873e-02,  0.320]</td>\n</tr>\n<tr>\n  <th>beta[1]</th>  <td>    0.7737</td> <td>6.832e-02</td> <td>   11.324</td> <td>9.943e-30</td>  <td>[  0.640,  0.908]</td> \n</tr>\n</table>\n<table class=\"simpletable\">\n<caption>Distribution</caption>\n<tr>\n   <td></td>     <th>coef</th>     <th>std err</th>      <th>t</th>       <th>P>|t|</th>   <th>95.0% Conf. Int.</th> \n</tr>\n<tr>\n  <th>nu</th> <td>    2.7894</td> <td>    0.230</td> <td>   12.114</td> <td>8.853e-34</td> <td>[  2.338,  3.241]</td>\n</tr>\n</table><br/><br/>Covariance estimator: robust\n```\n\nModelo Zero-Garch de la serie de retornos\n:::\n:::\n\n\n:::{#741eb615 .cell .markdown}\n### Residuos del AR-GARCH\n:::\n\n::: {#cell-fig-garch-residuals .cell execution_count=13}\n``` {}\n#| label: fig-garch-residuals\n#| fig-cap: Residuos del modelo AR-GARCH.\nfig = res.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![Residuos del modelo AR-GARCH.](data-screening_files/figure-html/fig-garch-residuals-output-1.png){#fig-garch-residuals width=582 height=431}\n:::\n:::\n\n\n:::{#2c6f7551 .cell .markdown}\n### Residuos contra volatilidad condicional\n:::\n\n::: {#cell-fig-residuals-vs-volatility .cell execution_count=14}\n``` {}\n#| label: fig-residuals-vs-volatility\n#| fig-cap: Residuos contra la volatilidad condicional del AR-GARCH.\nstd_resid = res.resid / res.conditional_volatility\nunit_var_resid = res.resid / res.resid.std()\ndf = pd.concat([std_resid, unit_var_resid], axis=1)\ndf.columns = [\"Residuos Estandarizados\", \"Residuos de Varianza Unitaria\"]\nsubplot = df.plot(kind=\"kde\", xlim=(-4, 4))\n```\n\n::: {.cell-output .cell-output-display}\n![Residuos contra la volatilidad condicional del AR-GARCH.](data-screening_files/figure-html/fig-residuals-vs-volatility-output-1.png){#fig-residuals-vs-volatility width=593 height=411}\n:::\n:::\n\n\n:::{#32e3c89a .cell .markdown}\n## Evaluación Retrospectiva (Backtesting)\n\n### Conversion de varianza predicha. \n:::\n\n::: {#forecast .cell execution_count=15}\n``` {}\n#| label: forecast\nforecasts = res.forecast(horizon=1)\nforecasted_std = np.sqrt(forecasts.variance)\nforecasted_std = forecasted_std[forecasted_std.index >\n                                split_date].loc[R_test.index, 'h.1']\n```\n:::\n\n\n:::{#68e5437a .cell .markdown}\n### MAPE del modelo\n:::\n\n::: {#mape .cell execution_count=16}\n``` {}\n#| label: mape\ndef MAPE(actual, predicted):\n    actual_std = actual.rolling(window=5).std().dropna()\n    return np.mean(np.abs((actual_std - predicted) / actual_std)) * 100\n\nmape_value = MAPE(R_test, forecasted_std)\nprint(f\"MAPE on Test Set (based on moving std): {mape_value:.2f}%\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMAPE on Test Set (based on moving std): 739.70%\n```\n:::\n:::\n\n\n:::{#ae645439 .cell .markdown}\n### Predichos vs Actuales Plot-Backtested\n:::\n\n::: {#cell-fig-predicted-vs-actual-backtest .cell execution_count=17}\n``` {}\n#| label: fig-predicted-vs-actual-backtest\n#| fig-cap: Desviación Estándar Móvil Real vs Pronosticada - Modelo Zero-GARCH\nplt.figure(figsize=(10, 6))\nplt.plot(R_test.index, R_test,\n         label='Desviación Estándar Móvil Real', color='blue')\nplt.plot(forecasted_std.index,\n         forecasted_std, label='Desviación Estándar Móvil Pronosticada', color='red', linestyle='--')\nax.set_xlim([forecasted_std.index.min(), forecasted_std.index.max()])\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Desviación Estándar Móvil Real vs Pronosticada - Modelo Zero-GARCH](data-screening_files/figure-html/fig-predicted-vs-actual-backtest-output-1.png){#fig-predicted-vs-actual-backtest width=790 height=485}\n:::\n:::\n\n\n",
    "supporting": [
      "data-screening_files\\figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}