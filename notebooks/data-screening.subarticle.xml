<sub-article article-type="notebook" id="nb-7">
<front-stub>
<title-group>
<article-title>Data Screening</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Contreras</surname>
<given-names>Ian</given-names>
</name>
<string-name>Ian Contreras</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="importaciones">
  <title>Importaciones</title>
  <sec id="librerías">
    <title>Librerías</title>
    <sec id="importing-libraries" specific-use="notebook-content">
    <preformat>#| label: importing-libraries
# Manejo de datos y análisis
import numpy as np
import pandas as pd
import scipy.stats as stats

# Modelos estadísticos y econométricos
import statsmodels.api as sm
from statsmodels.graphics.tsaplots import plot_acf, plot_pacf
from statsmodels.tsa.stattools import adfuller
from pmdarima.arima import auto_arima
from arch import arch_model

# Visualización
import matplotlib.pyplot as plt

# Presentación en IPython
from IPython.display import Markdown, HTML</preformat>
    </sec>
    <sec id="e498443e" specific-use="notebook-content">
  </sec>
  <sec id="data">
    <title>Data</title>
    </sec>
    <sec id="importing-data" specific-use="notebook-content">
    <preformat>#| label: importing-data
df = pd.read_csv(r'..\data\csv\irp.csv', parse_dates=[
                 'date'], index_col='date')
# df = pd.read_csv(r'.\data\csv\irp.csv', parse_dates=[
#                  'date'], index_col='date')
returns = df['price_return']
split_date = '2020-12-31'
R_test = df[df.index &gt;= split_date]['price_return'].rolling(
    window=5).std().dropna()</preformat>
    </sec>
    <sec id="cell-6b0b03d8" specific-use="notebook-content">
  </sec>
</sec>
<sec id="análisis-exploratorio.">
  <title>Análisis Exploratorio.</title>
  <sec id="serie-histórica">
    <title>Serie Histórica</title>
    </sec>
    <sec id="cell-fig-price-return-series" specific-use="notebook-content">
    <preformat>#| label: fig-price-return-series
#| fig-cap: Serie de retornos diarios IRP-GOBIX.
fig, ax = plt.subplots(figsize=(12, 10))
ax.plot(df.index, df['price_return'])
ax.set_ylabel('Retorno Precio (BPS)')
ax.set_xlim([df.index.min(), df.index.max()])
plt.show()</preformat>
    <boxed-text>
      <fig id="fig-price-return-series">
        <caption><p>Serie de retornos diarios IRP-GOBIX.</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="data-screening_files/figure-jats/fig-price-return-series-output-1.png" />
      </fig>
    </boxed-text>
    </sec>
    <sec id="cell-8dae97dd" specific-use="notebook-content">
  </sec>
  <sec id="análisis-descriptivo-de-la-muestra">
    <title>Análisis descriptivo de la muestra</title>
    </sec>
    <sec id="cell-return-descriptive-stats" specific-use="notebook-content">
    <preformat>#| label: return-descriptive-stats
#| fig-cap: Tabla de las estadísticas descriptiva de la serie de retornos
desc_stats = returns.describe()

skewness = returns.skew()
kurtosis = returns.kurtosis()
jb_test = sm.stats.jarque_bera(returns)

descriptive_table = pd.DataFrame({
    'Observations': [int(desc_stats['count'])],
    'Mean': [desc_stats['mean']],
    'Median': [desc_stats['50%']],
    'Std. Dev': [desc_stats['std']],
    'Skewness': [skewness],
    'Kurtosis': [kurtosis],
    'Jarque-Bera': [jb_test[0]],
    'Prob.': [jb_test[1]]
})
Markdown(descriptive_table.to_markdown(index=False))</preformat>
    <boxed-text id="return-descriptive-stats">
      <table-wrap>
        <table>
          <colgroup>
            <col width="17%" />
            <col width="9%" />
            <col width="11%" />
            <col width="12%" />
            <col width="12%" />
            <col width="12%" />
            <col width="16%" />
            <col width="9%" />
          </colgroup>
          <thead>
            <tr>
              <th align="right">Observations</th>
              <th align="right">Mean</th>
              <th align="right">Median</th>
              <th align="right">Std. Dev</th>
              <th align="right">Skewness</th>
              <th align="right">Kurtosis</th>
              <th align="right">Jarque-Bera</th>
              <th align="right">Prob.</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="right">1941</td>
              <td align="right">1.35325</td>
              <td align="right">-0.318044</td>
              <td align="right">23.5029</td>
              <td align="right">0.70527</td>
              <td align="right">7.588</td>
              <td align="right">4789.53</td>
              <td align="right">0</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>Tabla de las estadísticas descriptiva de la serie de
      retornos</p>
    </boxed-text>
    </sec>
    <sec id="cell-5d1c48aa" specific-use="notebook-content">
  </sec>
  <sec id="ajuste-de-distribuciones">
    <title>Ajuste de distribuciones</title>
    </sec>
    <sec id="cell-fig-distribution-fitting" specific-use="notebook-content">
    <preformat>#| label: fig-distribution-fitting
#| fig-cap: Ajuste de distribuciones a los retornos de precio.
distributions = [stats.norm, stats.t]

plt.figure(figsize=(10, 6))
plt.hist(returns, bins=50, density=True, alpha=0.6, label='Resultados Empíricos')

for dist in distributions:
    params = dist.fit(returns)
    x = np.linspace(returns.min(), returns.max(), 100)
    plt.plot(x, dist.pdf(x, *params), label=f'{dist.name} fit')

plt.xlabel('Retorno Precio (BPS)')
plt.ylabel('Verosimilitud')
plt.legend()
plt.show()</preformat>
    <boxed-text>
      <fig id="fig-distribution-fitting">
        <caption><p>Ajuste de distribuciones a los retornos de
        precio.</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="data-screening_files/figure-jats/fig-distribution-fitting-output-1.png" />
      </fig>
    </boxed-text>
    </sec>
    <sec id="c26185ff" specific-use="notebook-content">
  </sec>
  <sec id="q-q-plot-con-respecto-a-distribución-t">
    <title>Q-Q plot con respecto a distribución t</title>
    </sec>
    <sec id="cell-fig-tqq-plot" specific-use="notebook-content">
    <preformat>#| label: fig-tqq-plot
#| fig-cap: Q-Q Plot de retornos de precio contra la distribución t.
t_params = stats.t.fit(returns)

fig, ax = plt.subplots(figsize=(12, 10))
stats.probplot(returns, dist=&quot;t&quot;, sparams=t_params, plot=plt)
plt.grid(True)
plt.show()</preformat>
    <boxed-text>
      <fig id="fig-tqq-plot">
        <caption><p>Q-Q Plot de retornos de precio contra la
        distribución t.</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="data-screening_files/figure-jats/fig-tqq-plot-output-1.png" />
      </fig>
    </boxed-text>
    </sec>
    <sec id="cell-6dac2936" specific-use="notebook-content">
  </sec>
  <sec id="kolmorov-smirnov-test-para-distribución-t">
    <title>Kolmorov Smirnov test para distribución t</title>
    </sec>
    <sec id="kolmorov-smirnov" specific-use="notebook-content">
    <preformat>#| label: kolmorov-smirnov
ks_stat, p_value = stats.kstest(returns, 't', args=t_params)
print(f&quot;Kolmogorov-Smirnov statistic: {ks_stat}&quot;)
print(f&quot;P-value: {p_value}&quot;)</preformat>
    <boxed-text>
      <preformat>Kolmogorov-Smirnov statistic: 0.028557323574938343
P-value: 0.0827419967953622</preformat>
    </boxed-text>
    </sec>
    <sec id="cell-94a45eb5" specific-use="notebook-content">
  </sec>
  <sec id="test-de-estacionariedad-robustez">
    <title>Test de estacionariedad/ robustez</title>
    </sec>
    <sec id="adf" specific-use="notebook-content">
    <preformat>#| label: adf
result = adfuller(returns)
print('ADF Statistic:', result[0])
print('p-value:', result[1])</preformat>
    <boxed-text>
      <preformat>ADF Statistic: -13.174114850736395
p-value: 1.2332976276203498e-24</preformat>
    </boxed-text>
    </sec>
    <sec id="b113c35e" specific-use="notebook-content">
  </sec>
  <sec id="test-de-autocorrelación">
    <title>Test de autocorrelación</title>
    </sec>
    <sec id="cell-fig-acf-pacf" specific-use="notebook-content">
    <preformat>#| label: fig-acf-pacf
#| fig-cap: Función de autocorrelación (ACF) y función de autocorrelación parcial (PACF) de los retornos.
fig, axes = plt.subplots(2, 1, figsize=(10, 8))
plot_acf(returns, lags=24, ax=axes[0])
axes[0].set_title('Función de Autocorrelación (ACF)')

plot_pacf(returns, lags=12, ax=axes[1])
axes[1].set_title('Función de Autocorrelación Parcial (PACF)')

plt.tight_layout()
plt.show()</preformat>
    <boxed-text>
      <fig id="fig-acf-pacf">
        <caption><p>Función de autocorrelación (ACF) y función de
        autocorrelación parcial (PACF) de los retornos.</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="data-screening_files/figure-jats/fig-acf-pacf-output-1.png" />
      </fig>
    </boxed-text>
    </sec>
    <sec id="cell-551b17cc" specific-use="notebook-content">
  </sec>
</sec>
<sec id="resultados">
  <title>Resultados</title>
  <sec id="estimación-del-modelo-arima">
    <title>Estimación del modelo ARIMA</title>
    </sec>
    <sec id="cell-arima-model" specific-use="notebook-content">
    <preformat>#| label: arima-model
#| fig-cap: Modelo ARIMA de maxima verosimilitud para la serie de retornos.
model_auto = auto_arima(returns)
model_auto.summary()</preformat>
    <boxed-text id="arima-model">
      <table-wrap>
        <caption>
          <p>SARIMAX Results</p>
        </caption>
        <table>
          <tbody>
            <tr>
              <td>Dep. Variable:</td>
              <td>y</td>
              <td>No. Observations:</td>
              <td>1941</td>
            </tr>
            <tr>
              <td>Model:</td>
              <td>SARIMAX(3, 0, 4)</td>
              <td>Log Likelihood</td>
              <td>-8853.517</td>
            </tr>
            <tr>
              <td>Date:</td>
              <td>Sat, 19 Oct 2024</td>
              <td>AIC</td>
              <td>17725.034</td>
            </tr>
            <tr>
              <td>Time:</td>
              <td>16:29:17</td>
              <td>BIC</td>
              <td>17775.173</td>
            </tr>
            <tr>
              <td>Sample:</td>
              <td>0</td>
              <td>HQIC</td>
              <td>17743.472</td>
            </tr>
            <tr>
              <td></td>
              <td>- 1941</td>
              <td></td>
              <td></td>
            </tr>
            <tr>
              <td>Covariance Type:</td>
              <td>opg</td>
              <td></td>
              <td></td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <table-wrap>
        <table>
          <tbody>
            <tr>
              <td></td>
              <td>coef</td>
              <td>std err</td>
              <td>z</td>
              <td>P&gt;|z|</td>
              <td>[0.025</td>
              <td>0.975]</td>
            </tr>
            <tr>
              <td>intercept</td>
              <td>0.3602</td>
              <td>0.273</td>
              <td>1.317</td>
              <td>0.188</td>
              <td>-0.176</td>
              <td>0.896</td>
            </tr>
            <tr>
              <td>ar.L1</td>
              <td>0.1366</td>
              <td>0.065</td>
              <td>2.106</td>
              <td>0.035</td>
              <td>0.009</td>
              <td>0.264</td>
            </tr>
            <tr>
              <td>ar.L2</td>
              <td>-0.1931</td>
              <td>0.066</td>
              <td>-2.934</td>
              <td>0.003</td>
              <td>-0.322</td>
              <td>-0.064</td>
            </tr>
            <tr>
              <td>ar.L3</td>
              <td>0.7691</td>
              <td>0.061</td>
              <td>12.644</td>
              <td>0.000</td>
              <td>0.650</td>
              <td>0.888</td>
            </tr>
            <tr>
              <td>ma.L1</td>
              <td>-0.1139</td>
              <td>0.065</td>
              <td>-1.752</td>
              <td>0.080</td>
              <td>-0.241</td>
              <td>0.014</td>
            </tr>
            <tr>
              <td>ma.L2</td>
              <td>0.2163</td>
              <td>0.067</td>
              <td>3.220</td>
              <td>0.001</td>
              <td>0.085</td>
              <td>0.348</td>
            </tr>
            <tr>
              <td>ma.L3</td>
              <td>-0.7032</td>
              <td>0.062</td>
              <td>-11.315</td>
              <td>0.000</td>
              <td>-0.825</td>
              <td>-0.581</td>
            </tr>
            <tr>
              <td>ma.L4</td>
              <td>0.0750</td>
              <td>0.020</td>
              <td>3.715</td>
              <td>0.000</td>
              <td>0.035</td>
              <td>0.115</td>
            </tr>
            <tr>
              <td>sigma2</td>
              <td>536.2183</td>
              <td>8.358</td>
              <td>64.154</td>
              <td>0.000</td>
              <td>519.836</td>
              <td>552.600</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <table-wrap>
        <table>
          <tbody>
            <tr>
              <td>Ljung-Box (L1) (Q):</td>
              <td>0.00</td>
              <td>Jarque-Bera (JB):</td>
              <td>4395.18</td>
            </tr>
            <tr>
              <td>Prob(Q):</td>
              <td>1.00</td>
              <td>Prob(JB):</td>
              <td>0.00</td>
            </tr>
            <tr>
              <td>Heteroskedasticity (H):</td>
              <td>1.11</td>
              <td>Skew:</td>
              <td>0.59</td>
            </tr>
            <tr>
              <td>Prob(H) (two-sided):</td>
              <td>0.17</td>
              <td>Kurtosis:</td>
              <td>10.28</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>Modelo ARIMA de maxima verosimilitud para la serie de
      retornos.</p>
    </boxed-text>
    </sec>
    <sec id="a85c989d" specific-use="notebook-content">
  </sec>
  <sec id="estimación-del-ar-garch">
    <title>Estimación del AR-GARCH</title>
    </sec>
    <sec id="garch-model-fitting" specific-use="notebook-content">
    <preformat>#| label: garch-model-fitting
#| fig-cap: Ajuste del modelo Zero-Garch ala serie de retornos
ar = arch_model(returns, mean='Zero', vol='GARCH', dist='t')
res = ar.fit(last_obs=split_date)</preformat>
    <boxed-text>
      <preformat>Iteration:      1,   Func. Count:      6,   Neg. LLF: 13422.240578344366
Iteration:      2,   Func. Count:     13,   Neg. LLF: 9134.230609110135
Iteration:      3,   Func. Count:     19,   Neg. LLF: 8666.557319151609
Iteration:      4,   Func. Count:     25,   Neg. LLF: 8791.275490419279
Iteration:      5,   Func. Count:     31,   Neg. LLF: 8082.081172585756
Iteration:      6,   Func. Count:     37,   Neg. LLF: 8739.332058159429
Iteration:      7,   Func. Count:     43,   Neg. LLF: 8658.860183258712
Iteration:      8,   Func. Count:     49,   Neg. LLF: 7638.6451038734085
Iteration:      9,   Func. Count:     55,   Neg. LLF: 7626.627815474433
Iteration:     10,   Func. Count:     60,   Neg. LLF: 7624.619361750198
Iteration:     11,   Func. Count:     65,   Neg. LLF: 7623.76815711753
Iteration:     12,   Func. Count:     70,   Neg. LLF: 7623.223103893486
Iteration:     13,   Func. Count:     75,   Neg. LLF: 7623.048366501091
Iteration:     14,   Func. Count:     80,   Neg. LLF: 7622.998678403758
Iteration:     15,   Func. Count:     85,   Neg. LLF: 7622.986214899395
Iteration:     16,   Func. Count:     90,   Neg. LLF: 7622.975788918075
Iteration:     17,   Func. Count:     95,   Neg. LLF: 7622.9611635250085
Iteration:     18,   Func. Count:    100,   Neg. LLF: 7622.937610163095
Iteration:     19,   Func. Count:    105,   Neg. LLF: 7622.908361612077
Iteration:     20,   Func. Count:    110,   Neg. LLF: 7622.881904359898
Iteration:     21,   Func. Count:    115,   Neg. LLF: 7622.870928301752
Iteration:     22,   Func. Count:    120,   Neg. LLF: 7622.868967833485
Iteration:     23,   Func. Count:    125,   Neg. LLF: 7622.868843481545
Iteration:     24,   Func. Count:    130,   Neg. LLF: 7622.868828856013
Iteration:     25,   Func. Count:    135,   Neg. LLF: 7622.868827051428
Iteration:     26,   Func. Count:    139,   Neg. LLF: 7622.868827051394
Optimization terminated successfully    (Exit mode 0)
            Current function value: 7622.868827051428
            Iterations: 26
            Function evaluations: 139
            Gradient evaluations: 26</preformat>
    </boxed-text>
    </sec>
    <sec id="cell-26b325f1" specific-use="notebook-content">
  </sec>
  <sec id="resultados-del-ar-garch">
    <title>Resultados del AR-GARCH</title>
    </sec>
    <sec id="cell-garch-model" specific-use="notebook-content">
    <preformat>#| label: garch-model
#| fig-cap: Modelo Zero-Garch de la serie de retornos
HTML(res.summary().as_html())</preformat>
    <boxed-text id="garch-model">
      <table-wrap>
        <caption>
          <p>Zero Mean - GARCH Model Results</p>
        </caption>
        <table>
          <tbody>
            <tr>
              <td>Dep. Variable:</td>
              <td>price_return</td>
              <td>R-squared:</td>
              <td>0.000</td>
            </tr>
            <tr>
              <td>Mean Model:</td>
              <td>Zero Mean</td>
              <td>Adj. R-squared:</td>
              <td>0.001</td>
            </tr>
            <tr>
              <td>Vol Model:</td>
              <td>GARCH</td>
              <td>Log-Likelihood:</td>
              <td>-7622.87</td>
            </tr>
            <tr>
              <td>Distribution:</td>
              <td>Standardized Student's t</td>
              <td>AIC:</td>
              <td>15253.7</td>
            </tr>
            <tr>
              <td>Method:</td>
              <td>Maximum Likelihood</td>
              <td>BIC:</td>
              <td>15275.6</td>
            </tr>
            <tr>
              <td></td>
              <td></td>
              <td>No. Observations:</td>
              <td>1753</td>
            </tr>
            <tr>
              <td>Date:</td>
              <td>Sat, Oct 19 2024</td>
              <td>Df Residuals:</td>
              <td>1753</td>
            </tr>
            <tr>
              <td>Time:</td>
              <td>16:29:17</td>
              <td>Df Model:</td>
              <td>0</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <table-wrap>
        <caption>
          <p>Volatility Model</p>
        </caption>
        <table>
          <tbody>
            <tr>
              <td></td>
              <td>coef</td>
              <td>std err</td>
              <td>t</td>
              <td>P&gt;|t|</td>
              <td>95.0% Conf. Int.</td>
            </tr>
            <tr>
              <td>omega</td>
              <td>58.8679</td>
              <td>25.182</td>
              <td>2.338</td>
              <td>1.940e-02</td>
              <td>[ 9.512,1.082e+02]</td>
            </tr>
            <tr>
              <td>alpha[1]</td>
              <td>0.1892</td>
              <td>6.657e-02</td>
              <td>2.842</td>
              <td>4.482e-03</td>
              <td>[5.873e-02, 0.320]</td>
            </tr>
            <tr>
              <td>beta[1]</td>
              <td>0.7737</td>
              <td>6.832e-02</td>
              <td>11.324</td>
              <td>9.943e-30</td>
              <td>[ 0.640, 0.908]</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <table-wrap>
        <caption>
          <p>Distribution</p>
        </caption>
        <table>
          <tbody>
            <tr>
              <td></td>
              <td>coef</td>
              <td>std err</td>
              <td>t</td>
              <td>P&gt;|t|</td>
              <td>95.0% Conf. Int.</td>
            </tr>
            <tr>
              <td>nu</td>
              <td>2.7894</td>
              <td>0.230</td>
              <td>12.114</td>
              <td>8.853e-34</td>
              <td>[ 2.338, 3.241]</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>Modelo Zero-Garch de la serie de retornos</p>
    </boxed-text>
    </sec>
    <sec id="cell-2957bbb9" specific-use="notebook-content">
  </sec>
  <sec id="residuos-del-ar-garch">
    <title>Residuos del AR-GARCH</title>
    </sec>
    <sec id="cell-fig-garch-residuals" specific-use="notebook-content">
    <preformat>#| label: fig-garch-residuals
#| fig-cap: Residuos del modelo AR-GARCH.
fig = res.plot()</preformat>
    <boxed-text>
      <fig id="fig-garch-residuals">
        <caption><p>Residuos del modelo AR-GARCH.</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="data-screening_files/figure-jats/fig-garch-residuals-output-1.png" />
      </fig>
    </boxed-text>
    </sec>
    <sec id="cell-0560e7fd" specific-use="notebook-content">
  </sec>
  <sec id="residuos-contra-volatilidad-condicional">
    <title>Residuos contra volatilidad condicional</title>
    </sec>
    <sec id="cell-fig-residuals-vs-volatility" specific-use="notebook-content">
    <preformat>#| label: fig-residuals-vs-volatility
#| fig-cap: Residuos contra la volatilidad condicional del AR-GARCH.
std_resid = res.resid / res.conditional_volatility
unit_var_resid = res.resid / res.resid.std()
df = pd.concat([std_resid, unit_var_resid], axis=1)
df.columns = [&quot;Residuos Estandarizados&quot;, &quot;Residuos de Varianza Unitaria&quot;]
subplot = df.plot(kind=&quot;kde&quot;, xlim=(-4, 4))</preformat>
    <boxed-text>
      <fig id="fig-residuals-vs-volatility">
        <caption><p>Residuos contra la volatilidad condicional del
        AR-GARCH.</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="data-screening_files/figure-jats/fig-residuals-vs-volatility-output-1.png" />
      </fig>
    </boxed-text>
    </sec>
    <sec id="cd6acb5a" specific-use="notebook-content">
  </sec>
</sec>
<sec id="evaluación-retrospectiva-backtesting">
  <title>Evaluación Retrospectiva (Backtesting)</title>
  <sec id="conversion-de-varianza-predicha.">
    <title>Conversion de varianza predicha.</title>
    </sec>
    <sec id="forecast" specific-use="notebook-content">
    <preformat>#| label: forecast
forecasts = res.forecast(horizon=1)
forecasted_std = np.sqrt(forecasts.variance)
forecasted_std = forecasted_std[forecasted_std.index &gt;
                                split_date].loc[R_test.index, 'h.1']</preformat>
    </sec>
    <sec id="cell-5de2a68c" specific-use="notebook-content">
  </sec>
  <sec id="mape-del-modelo">
    <title>MAPE del modelo</title>
    </sec>
    <sec id="mape" specific-use="notebook-content">
    <preformat>#| label: mape
def MAPE(actual, predicted):
    actual_std = actual.rolling(window=5).std().dropna()
    return np.mean(np.abs((actual_std - predicted) / actual_std)) * 100

mape_value = MAPE(R_test, forecasted_std)
print(f&quot;MAPE on Test Set (based on moving std): {mape_value:.2f}%&quot;)</preformat>
    <boxed-text>
      <preformat>MAPE on Test Set (based on moving std): 739.70%</preformat>
    </boxed-text>
    </sec>
    <sec id="cell-77ee432c" specific-use="notebook-content">
  </sec>
  <sec id="predichos-vs-actuales-plot-backtested">
    <title>Predichos vs Actuales Plot-Backtested</title>
    </sec>
    <sec id="cell-fig-predicted-vs-actual-backtest" specific-use="notebook-content">
    <preformat>#| label: fig-predicted-vs-actual-backtest
#| fig-cap: Desviación Estándar Móvil Real vs Pronosticada - Modelo Zero-GARCH
fig, ax = plt.subplots(figsize=(10, 6))
ax.plot(R_test.index, R_test,
        label='Desviación Estándar Móvil Real', color='blue')
ax.plot(forecasted_std.index,
        forecasted_std, label='Desviación Estándar Móvil Pronosticada', color='red', linestyle='--')
ax.set_xlim([forecasted_std.index.min(), forecasted_std.index.max()])
plt.legend()
plt.show()</preformat>
    <boxed-text>
      <fig id="fig-predicted-vs-actual-backtest">
        <caption><p>Desviación Estándar Móvil Real vs Pronosticada -
        Modelo Zero-GARCH</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="data-screening_files/figure-jats/fig-predicted-vs-actual-backtest-output-1.png" />
      </fig>
    </boxed-text>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>